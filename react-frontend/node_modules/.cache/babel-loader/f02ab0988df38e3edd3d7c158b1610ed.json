{"ast":null,"code":"import _classCallCheck from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import{Link}from\"react-router-dom\";import CustomerService from\"../../services/CustomerService\";import ReservationService from\"../../services/ReservationService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ViewCustomerComponent=/*#__PURE__*/function(_Component){_inherits(ViewCustomerComponent,_Component);var _super=_createSuper(ViewCustomerComponent);function ViewCustomerComponent(props){var _this;_classCallCheck(this,ViewCustomerComponent);_this=_super.call(this,props);_this.state={id:_this.props.match.params.id||0,customer:{},reservations:{},flights:{}};return _this;}//first find the correct customer and gets their data, then gets the reservatinos for said customer\n_createClass(ViewCustomerComponent,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;CustomerService.getCustomerById(this.state.id).then(function(res){_this2.setState({customer:res.data});});ReservationService.getReservationForCustomer(this.state.id).then(function(res){_this2.setState({reservations:res.data});});}//will allow you to cancel res once i fix back end issues\n},{key:\"cancelRes\",value:function cancelRes(e){ReservationService.deleteRes(e.target.value);}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,customer=_this$state.customer,reservations=_this$state.reservations;console.log(reservations);return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card bg-subtle shadow-lg m-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col m-3\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/icon.png\",className:\"icon\",alt:\"company logo, plane over world\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"col m-5\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-5 ms-5\",children:\"Hey \".concat(customer.firstName,\"!\")}),/*#__PURE__*/_jsx(\"small\",{className:\"ms-5\",children:\"ID: \".concat(customer.id)})]}),\" \",/*#__PURE__*/_jsxs(Link,{className:\"btn\",to:\"/update-customer/\".concat(this.state.id),children:[\" \",\"Update\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body mx-3 my-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-2\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:\"\".concat(customer.firstName,\" \").concat(customer.middleName,\" \").concat(customer.lastName)}),/*#__PURE__*/_jsx(\"div\",{className:\"col-2\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:customer.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"col-4\",children:\"Phone Number:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-3\",children:customer.phoneNumber})]}),/*#__PURE__*/_jsx(\"label\",{children:\"Customer Adress:\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\".concat(customer.address,\" \").concat(customer.city,\" , \").concat(customer.state,\" , \").concat(customer.country)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"label\",{className:\"col-4 offset-md-4\",children:\"Reservations:\"})}),/** if reservations are present it displauys a table with customers reservations*/reservations.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped mb-5\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Airline\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Origin\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Destination\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Departure Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Cancel\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reservations.map(function(res){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:res.flight.airline}),/*#__PURE__*/_jsx(\"td\",{children:res.flight.originAirport[0].airportCode}),/*#__PURE__*/_jsx(\"td\",{children:res.flight.destinationAirport[0].airportCode}),/*#__PURE__*/_jsx(\"td\",{children:new Date(res.flight.departureDate).toDateString()}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:_this3.cancelRes,value:res.reservationId,children:\"Cancel\"})})]},res.reservationId);})})]})}):/*#__PURE__*/_jsx(\"div\",{children:\"false\"})]})]})});}}]);return ViewCustomerComponent;}(Component);export default ViewCustomerComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/customer/ViewCustomerComponent.js"],"names":["React","Component","Link","CustomerService","ReservationService","ViewCustomerComponent","props","state","id","match","params","customer","reservations","flights","getCustomerById","then","res","setState","data","getReservationForCustomer","e","deleteRes","target","value","console","log","firstName","middleName","lastName","email","phoneNumber","address","city","country","length","map","flight","airline","originAirport","airportCode","destinationAirport","Date","departureDate","toDateString","cancelRes","reservationId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CustomerService from \"../../services/CustomerService\";\n\nimport ReservationService from \"../../services/ReservationService\";\n\nclass ViewCustomerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id || 0,\n      customer: {},\n      reservations: {},\n      flights: {},\n    };\n  }\n  //first find the correct customer and gets their data, then gets the reservatinos for said customer\n  componentDidMount() {\n    CustomerService.getCustomerById(this.state.id).then((res) => {\n      this.setState({\n        customer: res.data,\n      });\n    });\n    ReservationService.getReservationForCustomer(this.state.id).then((res) => {\n      this.setState({\n        reservations: res.data,\n      });\n    });\n  }\n  //will allow you to cancel res once i fix back end issues\n  cancelRes(e) {\n    ReservationService.deleteRes(e.target.value);\n  }\n\n  render() {\n    let { customer, reservations } = this.state;\n    console.log(reservations);\n    return (\n      <div className=\"container\">\n        <div className=\"card bg-subtle shadow-lg m-5\">\n          <div className=\"row mt-3\">\n            <div className=\"col m-3\">\n              <img\n                src=\"/icon.png\"\n                className=\"icon\"\n                alt=\"company logo, plane over world\"\n              />\n            </div>\n            <div className=\"col m-5\">\n              <h4 className=\"mt-5 ms-5\">{`Hey ${customer.firstName}!`}</h4>\n              <small className=\"ms-5\">{`ID: ${customer.id}`}</small>\n            </div>{\" \"}\n            <Link className=\"btn\" to={`/update-customer/${this.state.id}`}>\n              {\" \"}\n              Update\n            </Link>\n          </div>\n          <div className=\"card-body mx-3 my-2\">\n            <div className=\"row mb-2\">\n              <div className=\"col-2\">Name:</div>\n              <div className=\"col-4\">{`${customer.firstName} ${customer.middleName} ${customer.lastName}`}</div>\n              <div className=\"col-2\">Email:</div>\n              <div className=\"col-4\">{customer.email}</div>\n            </div>\n            <div className=\"row\">\n              <p className=\"col-4\">Phone Number:</p>\n              <div className=\"col-3\">{customer.phoneNumber}</div>\n            </div>\n            <label>Customer Adress:</label>\n            <div>{`${customer.address} ${customer.city} , ${customer.state} , ${customer.country}`}</div>\n            <br></br>\n            <div className=\"row\">\n              <label className=\"col-4 offset-md-4\">Reservations:</label>\n            </div>\n            {\n              /** if reservations are present it displauys a table with customers reservations*/ reservations.length >\n              0 ? (\n                <div className=\"row\">\n                  <table className=\"table table-striped mb-5\">\n                    <thead>\n                      <tr>\n                        <th>Airline</th>\n                        <th>Origin</th>\n                        <th>Destination</th>\n                        <th>Departure Date</th>\n                        <th>Cancel</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {reservations.map((res) => (\n                        <tr key={res.reservationId}>\n                          <td>{res.flight.airline}</td>\n                          <td>{res.flight.originAirport[0].airportCode}</td>\n                          <td>\n                            {res.flight.destinationAirport[0].airportCode}\n                          </td>\n                          <td>\n                            {new Date(res.flight.departureDate).toDateString()}\n                          </td>\n                          <td>\n                            <button\n                              onClick={this.cancelRes}\n                              value={res.reservationId}\n                            >\n                              Cancel\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div>false</div>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ViewCustomerComponent;\n"]},"metadata":{},"sourceType":"module"}