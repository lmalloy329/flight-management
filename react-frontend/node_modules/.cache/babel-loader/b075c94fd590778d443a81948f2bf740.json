{"ast":null,"code":"import axios from \"axios\";\nconst AUTH_API_URL = \"http://localhost:8080/api/test/\";\n\nclass AuthService {\n  //logs in by submitting the username and password to the bvackend, if it receives a token back it knows the user is correct and stores it in local storage so the user is persistently logged in\n  login(username, password) {\n    axios.post(AUTH_API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  } //on logout it removes the user from local storage\n\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  } //submits customer data to sign up to register user\n\n\n  signup(customer) {\n    axios.post(AUTH_API_URL + \"signup\", customer);\n  } //gets the user info for thhe user currently logged in.\n\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/services/AuthService.js"],"names":["axios","AUTH_API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","signup","customer","getCurrentUser","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAC,iCAAnB;;AAEA,MAAMC,WAAN,CAAiB;AACb;AACAC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAoB;AACrBL,IAAAA,KAAK,CAACM,IAAN,CAAWL,YAAY,GAAC,QAAxB,EAAiC;AAACG,MAAAA,QAAD;AAAUC,MAAAA;AAAV,KAAjC,EAAsDE,IAAtD,CAA2DC,QAAQ,IAAG;AAClE,UAAGA,QAAQ,CAACC,IAAT,CAAcC,WAAjB,EAA6B;AACzBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AACD,aAAOD,QAAQ,CAACC,IAAhB;AACH,KALD;AAMH,GATY,CAUb;;;AACAM,EAAAA,MAAM,GAAE;AACJJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH,GAbY,CAcb;;;AACAC,EAAAA,MAAM,CAACC,QAAD,EAAU;AACZlB,IAAAA,KAAK,CAACM,IAAN,CAAWL,YAAY,GAAC,QAAxB,EAAkCiB,QAAlC;AACH,GAjBY,CAkBb;;;AACAC,EAAAA,cAAc,GAAE;AACZ,WAAON,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AArBY;;AAwBjB,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst AUTH_API_URL=\"http://localhost:8080/api/test/\";\n\nclass AuthService{\n    //logs in by submitting the username and password to the bvackend, if it receives a token back it knows the user is correct and stores it in local storage so the user is persistently logged in\n    login(username, password){\n        axios.post(AUTH_API_URL+\"signin\",{username,password}).then(response =>{\n            if(response.data.accessToken){\n                localStorage.setItem(\"user\", JSON.stringify(response.data))\n            }\n            return response.data;\n        })\n    }\n    //on logout it removes the user from local storage\n    logout(){\n        localStorage.removeItem(\"user\")\n    }\n    //submits customer data to sign up to register user\n    signup(customer){\n        axios.post(AUTH_API_URL+\"signup\", customer)\n    }\n    //gets the user info for thhe user currently logged in.\n    getCurrentUser(){\n        return JSON.parse(localStorage.getItem('user'))\n    }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}