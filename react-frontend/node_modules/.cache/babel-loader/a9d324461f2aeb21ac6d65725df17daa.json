{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/FlightsByAirport.js\";\nimport React, { Component } from \"react\";\nimport AirportService from \"../../services/AirportService\";\nimport SelectorComponent from \"../helpers/SelectorComponent\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FlightsByAirport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      airports: [],\n      origin: \"\",\n      flights: []\n    };\n  } //gets all airports and makes sure local storage is clear\n\n\n  componentDidMount() {\n    AirportService.getAirports().then(res => {\n      this.setState({\n        airports: res.data.sort(this.compare)\n      });\n    });\n  } //handles change to drop down menu\n\n\n  handleSelectChange(selectedValue, location) {\n    this.setState({\n      [location]: selectedValue\n    });\n  } //allows us to alphabatize Airport list\n\n\n  compare(a, b) {\n    if (a.airportLocation < b.airportLocation) {\n      return -1;\n    }\n\n    if (a.airportLocation > b.airportLocation) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  render() {\n    let {\n      airports,\n      flights\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-5 p-3 bg-subtle shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(SelectorComponent, {\n          className: \"\",\n          arrayOfData: airports,\n          location: \"origin\",\n          size: \"col-6 mt-2 mb-2\",\n          onSelectChange: this.handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table  table-striped flight-list mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Airline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departure Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arrival Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"flight-list\",\n          children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.airline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(flight.departureDate).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(flight.arrivalDate).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-light col m-3\",\n                value: flight.id,\n                onClick: this.handleSelectButton,\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"btn btn-light col m-3\",\n                to: `/view-flight/${flight.id}`,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, flight.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FlightsByAirport;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/FlightsByAirport.js"],"names":["React","Component","AirportService","SelectorComponent","Link","FlightsByAirport","constructor","props","state","airports","origin","flights","componentDidMount","getAirports","then","res","setState","data","sort","compare","handleSelectChange","selectedValue","location","a","b","airportLocation","render","map","flight","airline","Date","departureDate","toLocaleString","arrivalDate","id","handleSelectButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AirportService from \"../../services/AirportService\";\nimport SelectorComponent from \"../helpers/SelectorComponent\";\nimport { Link } from \"react-router-dom\";\n\nclass FlightsByAirport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { airports: [], origin: \"\", flights: [] };\n  }\n\n  //gets all airports and makes sure local storage is clear\n  componentDidMount() {\n    AirportService.getAirports().then((res) => {\n      this.setState({\n        airports: res.data.sort(this.compare),\n      });\n    });\n  }\n  //handles change to drop down menu\n  handleSelectChange(selectedValue, location) {\n    this.setState({\n      [location]: selectedValue,\n    });\n  }\n  //allows us to alphabatize Airport list\n  compare(a, b) {\n    if (a.airportLocation < b.airportLocation) {\n      return -1;\n    }\n    if (a.airportLocation > b.airportLocation) {\n      return 1;\n    }\n    return 0;\n  }\n\n  render() {\n    let { airports, flights } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"card m-5 p-3 bg-subtle shadow-lg\">\n          <SelectorComponent\n            className=\"\"\n            arrayOfData={airports}\n            location={\"origin\"}\n            size={\"col-6 mt-2 mb-2\"}\n            onSelectChange={this.handleSelectChange}\n          />\n        </div>\n        <table className=\"table  table-striped flight-list mb-5\">\n          <thead>\n            <tr>\n              <th>Airline</th>\n              <th>Departure Time</th>\n              <th>Arrival Time</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"flight-list\">\n            {flights.map((flight) => (\n              <tr key={flight.id}>\n                <td>{flight.airline}</td>\n                <td>\n                  <small>\n                    {new Date(flight.departureDate).toLocaleString()}\n                  </small>\n                </td>\n                <td>\n                  <small>{new Date(flight.arrivalDate).toLocaleString()}</small>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-light col m-3\"\n                    value={flight.id}\n                    onClick={this.handleSelectButton}\n                  >\n                    Select\n                  </button>\n                  <Link\n                    className=\"btn btn-light col m-3\"\n                    to={`/view-flight/${flight.id}`}\n                  >\n                    View\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default FlightsByAirport;\n"]},"metadata":{},"sourceType":"module"}