{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ListFlightComponent.js\";\nimport React, { Component } from \"react\";\nimport FlightService from \"../../services/FlightService\";\nimport { Link } from \"react-router-dom\";\nimport AirportService from \"../../services/AirportService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListFlightComponent extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      flights: [],\n      origin: \"\",\n      destination: \"\",\n      departureDate: \"\",\n      tripType: \"Roundtrip\",\n      itinerary: []\n    };\n    this.handleSelectButton = this.handleSelectButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      tripType: localStorage.getItem(\"tripType\"),\n      departureDate: localStorage.getItem(\"departureDate\")\n    });\n    AirportService.getAirportsByCode(localStorage.getItem(\"origin\")).then(res => {\n      this.setState({\n        origin: res.data\n      });\n    });\n    AirportService.getAirportsByCode(localStorage.getItem(\"destination\")).then(res => {\n      this.setState({\n        destination: res.data\n      });\n    });\n    FlightService.getFlightsByAirportCode(localStorage.getItem(\"origin\")).then(res => {\n      let flights = res.data.filter(data => data.destinationAirport[0].airportCode === localStorage.getItem(\"destination\"));\n      let dDate = new Date(localStorage.getItem(\"departureDate\").slice(0, 28)).toISOString().slice(0, 10);\n      let flightsFiltered = flights.filter(flight => {\n        if (flight.departureDate.includes(dDate)) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      this.setState({\n        flights: flightsFiltered\n      });\n    });\n  }\n\n  deleteFlight(id) {\n    FlightService.deleteFlight(id).then(res => {\n      this.setState({\n        flights: this.state.flights.filter(flight => flight.id !== id)\n      });\n    });\n  }\n\n  handleSelectButton(e) {\n    let itin = this.state.itinerary;\n    itin.push(this.state.flights.filter(flight => {\n      console.log(typeof flight.id, typeof e.target.value);\n      return flight.id === parseInt(e.target.value);\n    })[0]);\n    this.setState({\n      itinerary: itin\n    });\n  }\n\n  render() {\n    if (this.state.itinerary.length > 0) {\n      console.log(\"we did it\");\n    }\n\n    let flights = this.state.flights;\n    if (this) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mt-3\",\n        children: \"Flight List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flight-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [\"From \", this.state.origin.airportLocation, \" to\", \" \", this.state.destination.airportLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table  table-striped flight-list mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Airline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Departure Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Arrival Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"flight-list\",\n            children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: flight.airline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(flight.departureDate).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(flight.arrivalDate).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-light col m-3\",\n                  value: flight.id,\n                  onClick: this.handleSelectButton,\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"btn btn-light col m-3\",\n                  to: `/view-flight/${flight.id}`,\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)]\n            }, flight.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ListFlightComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ListFlightComponent.js"],"names":["React","Component","FlightService","Link","AirportService","ListFlightComponent","constructor","props","console","log","state","flights","origin","destination","departureDate","tripType","itinerary","handleSelectButton","bind","componentDidMount","setState","localStorage","getItem","getAirportsByCode","then","res","data","getFlightsByAirportCode","filter","destinationAirport","airportCode","dDate","Date","slice","toISOString","flightsFiltered","flight","includes","deleteFlight","id","e","itin","push","target","value","parseInt","render","length","airportLocation","map","airline","toLocaleString","arrivalDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FlightService from \"../../services/FlightService\";\nimport { Link } from \"react-router-dom\";\nimport AirportService from \"../../services/AirportService\";\n\nclass ListFlightComponent extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      flights: [],\n      origin: \"\",\n      destination: \"\",\n      departureDate: \"\",\n      tripType: \"Roundtrip\",\n      itinerary: [],\n    };\n    this.handleSelectButton = this.handleSelectButton.bind(this);\n  }\n  componentDidMount() {\n    this.setState({\n      tripType: localStorage.getItem(\"tripType\"),\n      departureDate: localStorage.getItem(\"departureDate\"),\n    });\n    AirportService.getAirportsByCode(localStorage.getItem(\"origin\")).then(\n      (res) => {\n        this.setState({\n          origin: res.data,\n        });\n      }\n    );\n    AirportService.getAirportsByCode(localStorage.getItem(\"destination\")).then(\n      (res) => {\n        this.setState({\n          destination: res.data,\n        });\n      }\n    );\n    FlightService.getFlightsByAirportCode(localStorage.getItem(\"origin\")).then(\n      (res) => {\n        let flights = res.data.filter(\n          (data) =>\n            data.destinationAirport[0].airportCode ===\n            localStorage.getItem(\"destination\")\n        );\n        let dDate = new Date(localStorage.getItem(\"departureDate\").slice(0, 28))\n          .toISOString()\n          .slice(0, 10);\n        let flightsFiltered = flights.filter((flight) => {\n          if (flight.departureDate.includes(dDate)) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n        this.setState({\n          flights: flightsFiltered,\n        });\n      }\n    );\n  }\n  deleteFlight(id) {\n    FlightService.deleteFlight(id).then((res) => {\n      this.setState({\n        flights: this.state.flights.filter((flight) => flight.id !== id),\n      });\n    });\n  }\n  handleSelectButton(e) {\n    let itin = this.state.itinerary;\n    itin.push(\n      this.state.flights.filter((flight) => {\n        console.log(typeof flight.id, typeof e.target.value);\n        return flight.id === parseInt(e.target.value);\n      })[0]\n    );\n    this.setState({\n      itinerary: itin,\n    });\n  }\n  render() {\n    if (this.state.itinerary.length > 0) {\n      console.log(\"we did it\");\n    }\n    let flights = this.state.flights;\n    if (this)\n      return (\n        <div className=\"container\">\n          <h2 className=\"text-center mt-3\">Flight List</h2>\n          <div className=\"row flight-list\">\n            <div className=\"text-center\">\n              From {this.state.origin.airportLocation} to{\" \"}\n              {this.state.destination.airportLocation}\n            </div>\n            <table className=\"table  table-striped flight-list mb-5\">\n              <thead>\n                <tr>\n                  <th>Airline</th>\n                  <th>Departure Time</th>\n                  <th>Arrival Time</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"flight-list\">\n                {flights.map((flight) => (\n                  <tr key={flight.id}>\n                    <td>{flight.airline}</td>\n                    <td>\n                      <small>\n                        {new Date(flight.departureDate).toLocaleString()}\n                      </small>\n                    </td>\n                    <td>\n                      <small>\n                        {new Date(flight.arrivalDate).toLocaleString()}\n                      </small>\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn btn-light col m-3\"\n                        value={flight.id}\n                        onClick={this.handleSelectButton}\n                      >\n                        Select\n                      </button>\n                      <Link\n                        className=\"btn btn-light col m-3\"\n                        to={`/view-flight/${flight.id}`}\n                      >\n                        View\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default ListFlightComponent;\n"]},"metadata":{},"sourceType":"module"}