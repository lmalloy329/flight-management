{"ast":null,"code":"import _classCallCheck from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import axios from\"axios\";var RESERVATION_API_BASE_URL=\"http://localhost:8080/api/test/reservations\";var ReservationService=/*#__PURE__*/function(){function ReservationService(){_classCallCheck(this,ReservationService);}_createClass(ReservationService,[{key:\"getReservations\",value://gets all reservations\nfunction getReservations(){return axios.get(RESERVATION_API_BASE_URL);}//gets list of reservations for a specific custiomer\n},{key:\"getReservationForCustomer\",value:function getReservationForCustomer(custId){return axios.get(RESERVATION_API_BASE_URL+\"/cust/\"+custId);}//get reservations for a specific flight\n},{key:\"getReservationForFlight\",value:function getReservationForFlight(flightId){return axios.get(RESERVATION_API_BASE_URL+\"/flight/\"+flightId);}// create new reservation using flightId and Customer id and sending seat class as the body\n},{key:\"createReservations\",value:function createReservations(flightId,custId,seatClass){return axios.post(RESERVATION_API_BASE_URL+\"/flight/\"+flightId+\"/customer/\"+custId,seatClass);}//issues with back end but goal is to delete reservation using the reservationId\n},{key:\"deleteRes\",value:function deleteRes(resId){axios.delete(RESERVATION_API_BASE_URL+\"/\"+resId);}}]);return ReservationService;}();export default new ReservationService();","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/services/ReservationService.js"],"names":["axios","RESERVATION_API_BASE_URL","ReservationService","get","custId","flightId","seatClass","post","resId","delete"],"mappings":"8SAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,6CAAjC,C,GAEMC,CAAAA,kB,+JACJ;AACA,0BAAkB,CAChB,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAUF,wBAAV,CAAP,CACD,CACD;yCACA,mCAA0BG,MAA1B,CAAkC,CAChC,MAAOJ,CAAAA,KAAK,CAACG,GAAN,CAAUF,wBAAwB,CAAG,QAA3B,CAAsCG,MAAhD,CAAP,CACD,CACD;uCACA,iCAAwBC,QAAxB,CAAkC,CAChC,MAAOL,CAAAA,KAAK,CAACG,GAAN,CAAUF,wBAAwB,CAAG,UAA3B,CAAwCI,QAAlD,CAAP,CACD,CACD;kCACA,4BAAmBA,QAAnB,CAA6BD,MAA7B,CAAqCE,SAArC,CAAgD,CAC9C,MAAON,CAAAA,KAAK,CAACO,IAAN,CACLN,wBAAwB,CAAG,UAA3B,CAAwCI,QAAxC,CAAmD,YAAnD,CAAkED,MAD7D,CAELE,SAFK,CAAP,CAID,CACD;yBACA,mBAAUE,KAAV,CAAiB,CACfR,KAAK,CAACS,MAAN,CAAaR,wBAAwB,CAAG,GAA3B,CAAiCO,KAA9C,EACD,C,kCAGH,cAAe,IAAIN,CAAAA,kBAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst RESERVATION_API_BASE_URL = \"http://localhost:8080/api/test/reservations\";\n\nclass ReservationService {\n  //gets all reservations\n  getReservations() {\n    return axios.get(RESERVATION_API_BASE_URL);\n  }\n  //gets list of reservations for a specific custiomer\n  getReservationForCustomer(custId) {\n    return axios.get(RESERVATION_API_BASE_URL + \"/cust/\" + custId);\n  }\n  //get reservations for a specific flight\n  getReservationForFlight(flightId) {\n    return axios.get(RESERVATION_API_BASE_URL + \"/flight/\" + flightId);\n  }\n  // create new reservation using flightId and Customer id and sending seat class as the body\n  createReservations(flightId, custId, seatClass) {\n    return axios.post(\n      RESERVATION_API_BASE_URL + \"/flight/\" + flightId + \"/customer/\" + custId,\n      seatClass\n    );\n  }\n  //issues with back end but goal is to delete reservation using the reservationId\n  deleteRes(resId) {\n    axios.delete(RESERVATION_API_BASE_URL + \"/\" + resId);\n  }\n}\n\nexport default new ReservationService();\n"]},"metadata":{},"sourceType":"module"}