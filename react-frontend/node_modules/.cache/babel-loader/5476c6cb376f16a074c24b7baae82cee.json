{"ast":null,"code":"import _classCallCheck from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import axios from\"axios\";var FLIGHT_API_BASE_URL=\"http://localhost:8080/api/test/flights\";var FlightService=/*#__PURE__*/function(){function FlightService(){_classCallCheck(this,FlightService);}_createClass(FlightService,[{key:\"getFlights\",value://get all flights\nfunction getFlights(){return axios.get(FLIGHT_API_BASE_URL);}//create new flight\n},{key:\"createFlight\",value:function createFlight(flight){return axios.post(FLIGHT_API_BASE_URL,flight);}// get one flight by flightId\n},{key:\"getFlightById\",value:function getFlightById(flightId){return axios.get(FLIGHT_API_BASE_URL+\"/\"+flightId);}//update flight by flight id\n},{key:\"updateFlight\",value:function updateFlight(flight,flightId){return axios.put(FLIGHT_API_BASE_URL+\"/\"+flightId,flight);}//get single flight by the Siport code of its origin\n},{key:\"getFlightsByAirportCode\",value:function getFlightsByAirportCode(origin){return axios.get(FLIGHT_API_BASE_URL+\"/code/\"+origin);}//deletes flight\n},{key:\"deleteFlight\",value:function deleteFlight(flightId){return axios.delete(FLIGHT_API_BASE_URL+\"/\"+flightId);}}]);return FlightService;}();export default new FlightService();","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/services/FlightService.js"],"names":["axios","FLIGHT_API_BASE_URL","FlightService","get","flight","post","flightId","put","origin","delete"],"mappings":"8SAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,wCAA5B,C,GAEMC,CAAAA,a,2IACJ;AACA,qBAAa,CACX,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAUF,mBAAV,CAAP,CACD,CACD;4BACA,sBAAaG,MAAb,CAAqB,CACnB,MAAOJ,CAAAA,KAAK,CAACK,IAAN,CAAWJ,mBAAX,CAAgCG,MAAhC,CAAP,CACD,CACD;6BACA,uBAAcE,QAAd,CAAwB,CACtB,MAAON,CAAAA,KAAK,CAACG,GAAN,CAAUF,mBAAmB,CAAG,GAAtB,CAA4BK,QAAtC,CAAP,CACD,CACD;4BACA,sBAAaF,MAAb,CAAqBE,QAArB,CAA+B,CAC7B,MAAON,CAAAA,KAAK,CAACO,GAAN,CAAUN,mBAAmB,CAAG,GAAtB,CAA4BK,QAAtC,CAAgDF,MAAhD,CAAP,CACD,CACD;uCACA,iCAAwBI,MAAxB,CAAgC,CAC9B,MAAOR,CAAAA,KAAK,CAACG,GAAN,CAAUF,mBAAmB,CAAG,QAAtB,CAAiCO,MAA3C,CAAP,CACD,CACD;4BACA,sBAAaF,QAAb,CAAuB,CACrB,MAAON,CAAAA,KAAK,CAACS,MAAN,CAAaR,mBAAmB,CAAG,GAAtB,CAA4BK,QAAzC,CAAP,CACD,C,6BAGH,cAAe,IAAIJ,CAAAA,aAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst FLIGHT_API_BASE_URL = \"http://localhost:8080/api/test/flights\";\n\nclass FlightService {\n  //get all flights\n  getFlights() {\n    return axios.get(FLIGHT_API_BASE_URL);\n  }\n  //create new flight\n  createFlight(flight) {\n    return axios.post(FLIGHT_API_BASE_URL, flight);\n  }\n  // get one flight by flightId\n  getFlightById(flightId) {\n    return axios.get(FLIGHT_API_BASE_URL + \"/\" + flightId);\n  }\n  //update flight by flight id\n  updateFlight(flight, flightId) {\n    return axios.put(FLIGHT_API_BASE_URL + \"/\" + flightId, flight);\n  }\n  //get single flight by the Siport code of its origin\n  getFlightsByAirportCode(origin) {\n    return axios.get(FLIGHT_API_BASE_URL + \"/code/\" + origin);\n  }\n  //deletes flight\n  deleteFlight(flightId) {\n    return axios.delete(FLIGHT_API_BASE_URL + \"/\" + flightId);\n  }\n}\n\nexport default new FlightService();\n"]},"metadata":{},"sourceType":"module"}