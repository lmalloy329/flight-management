{"ast":null,"code":"import axios from \"axios\";\nconst AUTH_API_URL = \"http://localhost:8080/api/test/\";\n\nclass AuthService {\n  //logs in by submitting the username and password to the bvackend, if it receives a token back it knows the user is correct and stores it in local storage so the user is persistently logged in\n  login(username, password) {\n    // axios.post(AUTH_API_URL+\"sign-in\",{username,password}).then(response =>{\n    //     console.log(\"hi\")\n    //     if(response.data.accessToken){\n    //         localStorage.setItem(\"user\", JSON.stringify(response.data))\n    //     }\n    //     return response.data;\n    // })\n    return axios.get(AUTH_API_URL + \"customers\").then(response => {\n      let user = response.data.filter(data => data.username.toLowerCase() === username.toLowerCase());\n      console.log(\"hi\");\n\n      if (user[0] && user[0].password === password) {\n        localStorage.setItem(\"user\", JSON.parse(user));\n      }\n\n      return user;\n    });\n  } //on logout it removes the user from local storage\n\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  } //submits customer data to sign up to register user\n\n\n  signup(customer) {\n    return axios.post(\"http://localhost:8080/api/auth/signup\", customer);\n  } //gets the user info for thhe user currently logged in.\n\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/services/AuthService.js"],"names":["axios","AUTH_API_URL","AuthService","login","username","password","get","then","response","user","data","filter","toLowerCase","console","log","localStorage","setItem","JSON","parse","logout","removeItem","signup","customer","post","getCurrentUser","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAC,iCAAnB;;AAEA,MAAMC,WAAN,CAAiB;AACb;AACAC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAoB;AACrB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,WAAOL,KAAK,CAACM,GAAN,CAAUL,YAAY,GAAC,WAAvB,EAAoCM,IAApC,CAAyCC,QAAQ,IAAE;AACtD,UAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBD,IAAI,IAAGA,IAAI,CAACN,QAAL,CAAcQ,WAAd,OAA8BR,QAAQ,CAACQ,WAAT,EAA1D,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,UAAGL,IAAI,CAAC,CAAD,CAAJ,IAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQJ,QAAR,KAAmBA,QAAhC,EAAyC;AACrCU,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,KAAL,CAAWT,IAAX,CAA7B;AACH;;AACD,aAAOA,IAAP;AACH,KAPM,CAAP;AAUH,GArBY,CAsBb;;;AACAU,EAAAA,MAAM,GAAE;AACJJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH,GAzBY,CA0Bb;;;AACAC,EAAAA,MAAM,CAACC,QAAD,EAAU;AACZ,WAAOtB,KAAK,CAACuB,IAAN,CAAW,uCAAX,EAAoDD,QAApD,CAAP;AACH,GA7BY,CA8Bb;;;AACAE,EAAAA,cAAc,GAAE;AACZ,WAAOP,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AAjCY;;AAoCjB,eAAe,IAAIvB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst AUTH_API_URL=\"http://localhost:8080/api/test/\";\n\nclass AuthService{\n    //logs in by submitting the username and password to the bvackend, if it receives a token back it knows the user is correct and stores it in local storage so the user is persistently logged in\n    login(username, password){\n        // axios.post(AUTH_API_URL+\"sign-in\",{username,password}).then(response =>{\n        //     console.log(\"hi\")\n\n        //     if(response.data.accessToken){\n        //         localStorage.setItem(\"user\", JSON.stringify(response.data))\n        //     }\n        //     return response.data;\n        // })\n        return axios.get(AUTH_API_URL+\"customers\").then(response=>{\n            let user = response.data.filter(data=> data.username.toLowerCase()===username.toLowerCase())\n            console.log(\"hi\")\n            if(user[0] &&user[0].password===password){\n                localStorage.setItem(\"user\", JSON.parse(user))\n            }\n            return user;\n        })\n      \n        \n    }\n    //on logout it removes the user from local storage\n    logout(){\n        localStorage.removeItem(\"user\")\n    }\n    //submits customer data to sign up to register user\n    signup(customer){\n        return axios.post(\"http://localhost:8080/api/auth/signup\", customer)\n    }\n    //gets the user info for thhe user currently logged in.\n    getCurrentUser(){\n        return JSON.parse(localStorage.getItem('user'))\n    }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}