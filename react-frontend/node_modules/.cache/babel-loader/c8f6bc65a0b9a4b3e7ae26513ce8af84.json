{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/FlightsByAirport.js\";\nimport React, { Component } from \"react\";\nimport AirportService from \"../../services/AirportService\";\nimport SelectorComponent from \"../helpers/SelectorComponent\";\nimport { Link } from \"react-router-dom\";\nimport FlightService from \"../../services/FlightService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FlightsByAirport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      airports: [],\n      origin: \"\",\n      flights: []\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  } //gets all airports and makes sure local storage is clear\n\n\n  componentDidMount() {\n    AirportService.getAirports().then(res => {\n      this.setState({\n        airports: res.data.sort(this.compare)\n      });\n    });\n  } //handles change to drop down menu\n\n\n  handleSelectChange(selectedValue, location) {\n    this.setState({\n      [location]: selectedValue\n    });\n    console.log(this.state);\n    FlightService.getFlightsByAirportCode(selectedValue).then(res => {\n      this.setState({\n        flights: res.data\n      });\n    });\n  } //allows us to alphabatize Airport list\n\n\n  compare(a, b) {\n    if (a.airportLocation < b.airportLocation) {\n      return -1;\n    }\n\n    if (a.airportLocation > b.airportLocation) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  render() {\n    let {\n      airports,\n      flights,\n      origin\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-5 p-3 bg-subtle shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(SelectorComponent, {\n          arrayOfData: airports,\n          location: \"origin\",\n          size: \"col-6 offset-md-3\",\n          onSelectChange: this.handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" \", this.state.flights.lengths > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: origin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table  table-striped flight-list mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Airline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departure Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arrival Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"flight-list\",\n          children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.airline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(flight.departureDate).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(flight.arrivalDate).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.destinationAirport[0].airportName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"btn btn-light col m-3\",\n                to: `/view-flight/${flight.id}`,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, flight.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FlightsByAirport;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/FlightsByAirport.js"],"names":["React","Component","AirportService","SelectorComponent","Link","FlightService","FlightsByAirport","constructor","props","state","airports","origin","flights","handleSelectChange","bind","componentDidMount","getAirports","then","res","setState","data","sort","compare","selectedValue","location","console","log","getFlightsByAirportCode","a","b","airportLocation","render","lengths","map","flight","airline","Date","departureDate","toLocaleString","arrivalDate","destinationAirport","airportName","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AirportService from \"../../services/AirportService\";\nimport SelectorComponent from \"../helpers/SelectorComponent\";\nimport { Link } from \"react-router-dom\";\nimport FlightService from \"../../services/FlightService\";\n\nclass FlightsByAirport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { airports: [], origin: \"\", flights: [] };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  //gets all airports and makes sure local storage is clear\n  componentDidMount() {\n    AirportService.getAirports().then((res) => {\n      this.setState({\n        airports: res.data.sort(this.compare),\n      });\n    });\n  }\n  //handles change to drop down menu\n  handleSelectChange(selectedValue, location) {\n    this.setState({\n      [location]: selectedValue,\n    });\n    console.log(this.state);\n    FlightService.getFlightsByAirportCode(selectedValue).then((res) => {\n      this.setState({\n        flights: res.data,\n      });\n    });\n  }\n  //allows us to alphabatize Airport list\n  compare(a, b) {\n    if (a.airportLocation < b.airportLocation) {\n      return -1;\n    }\n    if (a.airportLocation > b.airportLocation) {\n      return 1;\n    }\n    return 0;\n  }\n\n  render() {\n    let { airports, flights, origin } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"card m-5 p-3 bg-subtle shadow-lg\">\n          <SelectorComponent\n            arrayOfData={airports}\n            location={\"origin\"}\n            size={\"col-6 offset-md-3\"}\n            onSelectChange={this.handleSelectChange}\n          />{\" \"}\n          {this.state.flights.lengths > 0 ? (\n            <div>\n              <h3 className=\"text-center\">{origin}</h3>\n              <div className=\"row\">\n                <button>previous</button>\n                <button>next</button>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        <table className=\"table  table-striped flight-list mb-5\">\n          <thead>\n            <tr>\n              <th>Airline</th>\n              <th>Departure Time</th>\n              <th>Arrival Time</th>\n              <th>Destination</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"flight-list\">\n            {flights.map((flight) => (\n              <tr key={flight.id}>\n                <td>{flight.airline}</td>\n                <td>\n                  <small>\n                    {new Date(flight.departureDate).toLocaleString()}\n                  </small>\n                </td>\n                <td>\n                  <small>{new Date(flight.arrivalDate).toLocaleString()}</small>\n                </td>\n                <td>{flight.destinationAirport[0].airportName}</td>\n                <td>\n                  <Link\n                    className=\"btn btn-light col m-3\"\n                    to={`/view-flight/${flight.id}`}\n                  >\n                    View\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default FlightsByAirport;\n"]},"metadata":{},"sourceType":"module"}