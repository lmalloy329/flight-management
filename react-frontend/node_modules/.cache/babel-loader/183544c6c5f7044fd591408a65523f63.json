{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ReservationListComponent.js\";\nimport React, { Component } from \"react\";\nimport ReservationService from \"../../services/ReservationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ReservationListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTextHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      flightNum: \"\",\n      reservations: []\n    };\n    this.getReservations = this.getReservations.bind(this);\n  }\n\n  componentDidMount() {\n    this.getReservations();\n  }\n\n  getReservations() {\n    console.log(this.state.flightNum);\n    ReservationService.getReservationForFlight(this.state.flightNum).then(res => {\n      this.setState({\n        reservations: res.data\n      });\n    });\n  } //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n\n\n  render() {\n    let reservations = this.state.reservations;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-5 p-3 bg-subtle shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \" text-center m-3 p-1\",\n          children: \"Flight Reservations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row form-floating\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fligthNum\",\n            placeholder: \"\",\n            name: \"flightNum\",\n            className: \"form-control form-control-small\",\n            value: this.state.flightNum,\n            onChange: this.changeTextHandler,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstnameInput\",\n            className: \"form-label\",\n            children: \"Flight Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-personal\",\n            onClick: this.getReservations,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this),\n        /** if reservations are present it displauys a table with customers reservations*/\n        reservations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Airline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Origin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Destination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Departure Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: reservations.map(res => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: res.flight.airline\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: res.flight.originAirport[0].airportCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: res.flight.destinationAirport[0].airportCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(res.flight.departureDate).toDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: this.cancelRes,\n                    value: res.flight.id,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)]\n              }, res.reservationId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ReservationListComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ReservationListComponent.js"],"names":["React","Component","ReservationService","ReservationListComponent","constructor","props","changeTextHandler","e","setState","target","name","value","state","flightNum","reservations","getReservations","bind","componentDidMount","console","log","getReservationForFlight","then","res","data","render","length","map","flight","airline","originAirport","airportCode","destinationAirport","Date","departureDate","toDateString","cancelRes","id","reservationId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReservationService from \"../../services/ReservationService\";\n\nclass ReservationListComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flightNum: \"\",\n      reservations: [],\n    };\n    this.getReservations = this.getReservations.bind(this);\n  }\n  componentDidMount() {\n    this.getReservations();\n  }\n  getReservations() {\n    console.log(this.state.flightNum);\n    ReservationService.getReservationForFlight(this.state.flightNum).then(\n      (res) => {\n        this.setState({\n          reservations: res.data,\n        });\n      }\n    );\n  }\n  //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n  changeTextHandler = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    let reservations = this.state.reservations;\n    return (\n      <div className=\"container\">\n        <div className=\"card m-5 p-3 bg-subtle shadow-lg\">\n          <h3 className=\" text-center m-3 p-1\">Flight Reservations</h3>\n          <div className=\"row form-floating\">\n            <input\n              id=\"fligthNum\"\n              placeholder=\"\"\n              name=\"flightNum\"\n              className=\"form-control form-control-small\"\n              value={this.state.flightNum}\n              onChange={this.changeTextHandler}\n              required\n            ></input>\n            <label htmlFor=\"firstnameInput\" className=\"form-label\">\n              Flight Number\n            </label>\n            <button className=\"btn btn-personal\" onClick={this.getReservations}>\n              Search\n            </button>\n          </div>\n          {\n            /** if reservations are present it displauys a table with customers reservations*/ reservations.length >\n            0 ? (\n              <div className=\"row\">\n                <table className=\"table table-striped mb-5\">\n                  <thead>\n                    <tr>\n                      <th>Airline</th>\n                      <th>Origin</th>\n                      <th>Destination</th>\n                      <th>Departure Date</th>\n                      <th>Cancel</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {reservations.map((res) => (\n                      <tr key={res.reservationId}>\n                        <td>{res.flight.airline}</td>\n                        <td>{res.flight.originAirport[0].airportCode}</td>\n                        <td>{res.flight.destinationAirport[0].airportCode}</td>\n                        <td>\n                          {new Date(res.flight.departureDate).toDateString()}\n                        </td>\n                        <td>\n                          <button\n                            onClick={this.cancelRes}\n                            value={res.flight.id}\n                          >\n                            Cancel\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            ) : (\n              <div>false</div>\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReservationListComponent;\n"]},"metadata":{},"sourceType":"module"}