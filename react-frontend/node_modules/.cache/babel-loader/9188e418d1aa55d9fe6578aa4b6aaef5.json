{"ast":null,"code":"import axios from \"axios\";\nconst AUTH_API_URL = \"http://localhost:8080/api/test/\";\n\nclass AuthService {\n  //logs in by submitting the username and password to the bvackend, if it receives a token back it knows the user is correct and stores it in local storage so the user is persistently logged in\n  login(username, password) {\n    // axios.post(AUTH_API_URL+\"sign-in\",{username,password}).then(response =>{\n    //     console.log(\"hi\")\n    //     if(response.data.accessToken){\n    //         localStorage.setItem(\"user\", JSON.stringify(response.data))\n    //     }\n    //     return response.data;\n    // })\n    axios.get(AUTH_API_URL + \"customers\").then(response => {\n      let data = JSON.parse(response.data);\n      console.log(data);\n    });\n  } //on logout it removes the user from local storage\n\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  } //submits customer data to sign up to register user\n\n\n  signup(customer) {\n    axios.post(AUTH_API_URL + \"signup\", customer);\n  } //gets the user info for thhe user currently logged in.\n\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/services/AuthService.js"],"names":["axios","AUTH_API_URL","AuthService","login","username","password","get","then","response","data","JSON","parse","console","log","logout","localStorage","removeItem","signup","customer","post","getCurrentUser","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAC,iCAAnB;;AAEA,MAAMC,WAAN,CAAiB;AACb;AACAC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAoB;AACrB;AACA;AAEA;AACA;AACA;AACA;AACA;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAUL,YAAY,GAAC,WAAvB,EAAoCM,IAApC,CAAyCC,QAAQ,IAAE;AAC/C,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACC,IAApB,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEH,KAJD;AAKH,GAhBY,CAiBb;;;AACAK,EAAAA,MAAM,GAAE;AACJC,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH,GApBY,CAqBb;;;AACAC,EAAAA,MAAM,CAACC,QAAD,EAAU;AACZlB,IAAAA,KAAK,CAACmB,IAAN,CAAWlB,YAAY,GAAC,QAAxB,EAAkCiB,QAAlC;AACH,GAxBY,CAyBb;;;AACAE,EAAAA,cAAc,GAAE;AACZ,WAAOV,IAAI,CAACC,KAAL,CAAWI,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AA5BY;;AA+BjB,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst AUTH_API_URL=\"http://localhost:8080/api/test/\";\n\nclass AuthService{\n    //logs in by submitting the username and password to the bvackend, if it receives a token back it knows the user is correct and stores it in local storage so the user is persistently logged in\n    login(username, password){\n        // axios.post(AUTH_API_URL+\"sign-in\",{username,password}).then(response =>{\n        //     console.log(\"hi\")\n\n        //     if(response.data.accessToken){\n        //         localStorage.setItem(\"user\", JSON.stringify(response.data))\n        //     }\n        //     return response.data;\n        // })\n        axios.get(AUTH_API_URL+\"customers\").then(response=>{\n            let data = JSON.parse(response.data)\n            console.log(data)\n\n        })\n    }\n    //on logout it removes the user from local storage\n    logout(){\n        localStorage.removeItem(\"user\")\n    }\n    //submits customer data to sign up to register user\n    signup(customer){\n        axios.post(AUTH_API_URL+\"signup\", customer)\n    }\n    //gets the user info for thhe user currently logged in.\n    getCurrentUser(){\n        return JSON.parse(localStorage.getItem('user'))\n    }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}