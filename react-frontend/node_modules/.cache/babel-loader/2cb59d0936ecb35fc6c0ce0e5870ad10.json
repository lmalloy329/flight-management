{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ReservationListComponent.js\";\nimport React, { Component } from \"react\";\nimport CustomerService from \"../../services/CustomerService\";\nimport FlightService from \"../../services/FlightService\";\nimport ReservationService from \"../../services/ReservationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ReservationListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTextHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      flightNum: \"\",\n      reservations: [],\n      flight: [],\n      customers: {}\n    };\n    this.getReservations = this.getReservations.bind(this);\n  }\n\n  componentDidMount() {\n    CustomerService.getCustomers().then(res => {\n      this.setState({\n        customers: res.data\n      });\n    });\n\n    if (this.state.flightNum !== \"\") {\n      this.getReservations();\n    }\n  }\n\n  getReservations() {\n    FlightService.getFlightById(this.state.flightNum).then(res => this.setState({\n      flight: res.data\n    }));\n    let customers = this.state.customers;\n    console.log(customers);\n    ReservationService.getReservationForFlight(this.state.flightNum).then(res => {\n      res.data.map(reservation => {\n        customers.forEach(customer => {\n          customer.reservations.forEach(customerRes => {\n            if (customerRes.reservationId === reservation.reservationId) {\n              reservation[\"cust\"] = customer;\n            }\n          });\n        });\n        return reservation;\n      });\n      this.setState({\n        reservations: res.data\n      });\n    });\n  } //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n\n\n  render() {\n    let {\n      reservations,\n      flight\n    } = this.state;\n    console.log(flight);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-5 p-3 bg-subtle shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \" text-center m-3 p-1\",\n          children: \"Flight Reservations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), this.state.reservations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating col-6 offset-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"fligthNum\",\n              placeholder: \"\",\n              name: \"flightNum\",\n              className: \"form-control form-control-sm\",\n              value: this.state.flightNum,\n              onChange: this.changeTextHandler,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstnameInput\",\n              className: \"form-label\",\n              children: \"Flight Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-personal btn-sm col-2\",\n            onClick: this.getReservations,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col offset-md-5\",\n              children: `Flight: ${flight.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 offset-md-4\",\n              children: `${flight.originAirport[0].airportCode} to ${flight.destinationAirport[0].airportCode} `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this),\n        /** if reservations are present it displauys a table with customers reservations*/\n        reservations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Class\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: reservations.map(res => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: res.reservationId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${res.cust.firstName} ${res.cust.lastName || null}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: res.flight.destinationAirport[0].airportCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(res.flight.departureDate).toDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: this.cancelRes,\n                      value: res.flight.id,\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 27\n                  }, this)]\n                }, res.reservationId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ReservationListComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ReservationListComponent.js"],"names":["React","Component","CustomerService","FlightService","ReservationService","ReservationListComponent","constructor","props","changeTextHandler","e","setState","target","name","value","state","flightNum","reservations","flight","customers","getReservations","bind","componentDidMount","getCustomers","then","res","data","getFlightById","console","log","getReservationForFlight","map","reservation","forEach","customer","customerRes","reservationId","render","length","id","originAirport","airportCode","destinationAirport","cust","firstName","lastName","Date","departureDate","toDateString","cancelRes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CustomerService from \"../../services/CustomerService\";\nimport FlightService from \"../../services/FlightService\";\nimport ReservationService from \"../../services/ReservationService\";\n\nclass ReservationListComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flightNum: \"\",\n      reservations: [],\n      flight: [],\n      customers: {},\n    };\n    this.getReservations = this.getReservations.bind(this);\n  }\n  componentDidMount() {\n    CustomerService.getCustomers().then((res) => {\n      this.setState({ customers: res.data });\n    });\n\n    if (this.state.flightNum !== \"\") {\n      this.getReservations();\n    }\n  }\n  getReservations() {\n    FlightService.getFlightById(this.state.flightNum).then((res) =>\n      this.setState({ flight: res.data })\n    );\n    let customers = this.state.customers;\n    console.log(customers);\n    ReservationService.getReservationForFlight(this.state.flightNum).then(\n      (res) => {\n        res.data.map((reservation) => {\n          customers.forEach((customer) => {\n            customer.reservations.forEach((customerRes) => {\n              if (customerRes.reservationId === reservation.reservationId) {\n                reservation[\"cust\"] = customer;\n              }\n            });\n          });\n          return reservation;\n        });\n\n        this.setState({\n          reservations: res.data,\n        });\n      }\n    );\n  }\n  //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n  changeTextHandler = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    let { reservations, flight } = this.state;\n    console.log(flight);\n    return (\n      <div className=\"container\">\n        <div className=\"card m-5 p-3 bg-subtle shadow-lg\">\n          <h3 className=\" text-center m-3 p-1\">Flight Reservations</h3>\n          {this.state.reservations.length === 0 ? (\n            <div className=\"row\">\n              <div className=\"form-floating col-6 offset-md-2\">\n                <input\n                  id=\"fligthNum\"\n                  placeholder=\"\"\n                  name=\"flightNum\"\n                  className=\"form-control form-control-sm\"\n                  value={this.state.flightNum}\n                  onChange={this.changeTextHandler}\n                  required\n                ></input>\n                <label htmlFor=\"firstnameInput\" className=\"form-label\">\n                  Flight Number\n                </label>{\" \"}\n              </div>\n              <button\n                className=\"btn btn-personal btn-sm col-2\"\n                onClick={this.getReservations}\n              >\n                Search\n              </button>\n            </div>\n          ) : (\n            <div>\n              <div className=\"row\">\n                <div className=\"col offset-md-5\">{`Flight: ${flight.id}`}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-4 offset-md-4\">{`${flight.originAirport[0].airportCode} to ${flight.destinationAirport[0].airportCode} `}</div>\n              </div>\n            </div>\n          )}\n\n          {\n            /** if reservations are present it displauys a table with customers reservations*/ reservations.length >\n            0 ? (\n              <div className=\"row\">\n                <table className=\"table table-striped mb-5\">\n                  <thead>\n                    <tr>\n                      <th>Id</th>\n                      <th>Name</th>\n                      <th>Class</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {reservations.map((res) => {\n                      return (\n                        <tr key={res.reservationId}>\n                          <td>{res.reservationId}</td>\n                          <td>{`${res.cust.firstName} ${\n                            res.cust.lastName || null\n                          }`}</td>\n                          <td>\n                            {res.flight.destinationAirport[0].airportCode}\n                          </td>\n                          <td>\n                            {new Date(res.flight.departureDate).toDateString()}\n                          </td>\n                          <td>\n                            <button\n                              onClick={this.cancelRes}\n                              value={res.flight.id}\n                            >\n                              Cancel\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            ) : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReservationListComponent;\n"]},"metadata":{},"sourceType":"module"}