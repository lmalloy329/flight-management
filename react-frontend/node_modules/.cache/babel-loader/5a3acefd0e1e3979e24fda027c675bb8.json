{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/airport/CreateAirportComponent.js\";\nimport React, { Component } from \"react\";\nimport AirportService from \"../../services/AirportService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateAirportComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTextHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.saveAirport = e => {\n      e.preventDefault();\n      var forms = document.querySelectorAll(\".needs-validation\");\n      Array.prototype.slice.call(forms).forEach(function (form) {\n        if (!form.checkValidity()) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n\n        form.classList.add(\"was-validated\");\n      }, false);\n      let airport = {\n        airportCode: this.state.airportCode,\n        airportName: this.state.airportName,\n        airportLocation: this.state.airportLocation\n      };\n\n      if (airport.airportCode.length === 3 && airport.airportName !== \"\" && airport.airportLocation !== \"\") {\n        AirportService.createAirport(airport).then(() => {\n          this.props.history.push(\"/\");\n        });\n      }\n    };\n\n    this.state = {\n      airportName: \"\",\n      airportCode: \"\",\n      airportLocation: \"\"\n    };\n    this.changeTextHandler = this.changeTextHandler.bind(this);\n  } //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contianer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card m-5 p-3 bg-subtle shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"New Airport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"firstnameInput\",\n                  placeholder: \"Airport Name\",\n                  name: \"airportName\",\n                  className: \"form-control form-control-small\",\n                  value: this.state.airportName,\n                  onChange: this.changeTextHandler,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"firstnameInput\",\n                  className: \"form-label\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: \"First Name is required.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Airport Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Airport Name\",\n                  name: \"airportName\",\n                  className: \"form-control\",\n                  value: this.state.airportName,\n                  onChange: this.changeAirportName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Airport Code:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Airport Code\",\n                  name: \"airportCode\",\n                  className: \"form-control\",\n                  value: this.state.airportCode,\n                  onChange: this.changeAirportCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Airport Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Airport Location\",\n                  name: \"airportLocation\",\n                  className: \"form-control\",\n                  value: this.state.airportLocation,\n                  onChange: this.changeAirportLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: this.saveAirport,\n                children: [\"Save Aiport\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreateAirportComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/airport/CreateAirportComponent.js"],"names":["React","Component","AirportService","CreateAirportComponent","constructor","props","changeTextHandler","e","setState","target","name","value","saveAirport","preventDefault","forms","document","querySelectorAll","Array","prototype","slice","call","forEach","form","checkValidity","stopPropagation","classList","add","airport","airportCode","state","airportName","airportLocation","length","createAirport","then","history","push","bind","render","changeAirportName","changeAirportCode","changeAirportLocation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AirportService from \"../../services/AirportService\";\n\nclass CreateAirportComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      airportName: \"\",\n      airportCode: \"\",\n      airportLocation: \"\",\n    };\n    this.changeTextHandler = this.changeTextHandler.bind(this);\n  }\n  //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n  changeTextHandler = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  saveAirport = (e) => {\n    e.preventDefault();\n    var forms = document.querySelectorAll(\".needs-validation\");\n    Array.prototype.slice.call(forms).forEach(function (form) {\n      if (!form.checkValidity()) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      form.classList.add(\"was-validated\");\n    }, false);\n    let airport = {\n      airportCode: this.state.airportCode,\n      airportName: this.state.airportName,\n      airportLocation: this.state.airportLocation,\n    };\n    if (\n      airport.airportCode.length === 3 &&\n      airport.airportName !== \"\" &&\n      airport.airportLocation !== \"\"\n    ) {\n      AirportService.createAirport(airport).then(() => {\n        this.props.history.push(\"/\");\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"contianer\">\n        <div className=\"row\">\n          <div className=\"card m-5 p-3 bg-subtle shadow-lg\">\n            <h3 className=\"text-center\">New Airport</h3>\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-floating mb-3\">\n                  <input\n                    id=\"firstnameInput\"\n                    placeholder=\"Airport Name\"\n                    name=\"airportName\"\n                    className=\"form-control form-control-small\"\n                    value={this.state.airportName}\n                    onChange={this.changeTextHandler}\n                    required\n                  ></input>\n                  <label for=\"firstnameInput\" className=\"form-label\">\n                    First Name\n                  </label>\n                  {/**pops up if input validation isnt met*/}\n                  <div className=\"invalid-feedback\">\n                    First Name is required.\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label>Airport Name:</label>\n                  <input\n                    placeholder=\"Airport Name\"\n                    name=\"airportName\"\n                    className=\"form-control\"\n                    value={this.state.airportName}\n                    onChange={this.changeAirportName}\n                  ></input>\n\n                  <label>Airport Code:</label>\n                  <input\n                    placeholder=\"Airport Code\"\n                    name=\"airportCode\"\n                    className=\"form-control\"\n                    value={this.state.airportCode}\n                    onChange={this.changeAirportCode}\n                  ></input>\n                  <label>Airport Location:</label>\n                  <input\n                    placeholder=\"Airport Location\"\n                    name=\"airportLocation\"\n                    className=\"form-control\"\n                    value={this.state.airportLocation}\n                    onChange={this.changeAirportLocation}\n                  ></input>\n                </div>\n                <button className=\"btn btn-success\" onClick={this.saveAirport}>\n                  Save Aiport{\" \"}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateAirportComponent;\n"]},"metadata":{},"sourceType":"module"}