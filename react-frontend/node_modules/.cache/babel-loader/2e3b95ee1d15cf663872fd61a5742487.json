{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ReservationListComponent.js\";\nimport React, { Component } from \"react\";\nimport CustomerService from \"../../services/CustomerService\";\nimport FlightService from \"../../services/FlightService\";\nimport ReservationService from \"../../services/ReservationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ReservationListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTextHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      flightNum: \"\",\n      reservations: [],\n      flight: [],\n      customers: {}\n    };\n    this.getReservations = this.getReservations.bind(this);\n  }\n\n  componentDidMount() {\n    CustomerService.getCustomers().then(res => {\n      this.setState({\n        customers: res.data\n      });\n    });\n\n    if (this.state.flightNum !== \"\") {\n      this.getReservations();\n    }\n  }\n\n  getReservations() {\n    console.log(this.state);\n    FlightService.getFlightById(this.state.flightNum).then(res => this.setState({\n      fligth: res.data\n    }));\n    let customers = this.state.customers;\n    ReservationService.getReservationForFlight(this.state.flightNum).then(res => {\n      res.data.map(reservation => {\n        customers.then(response => {\n          response.data.map(customer => customer.reservations.forEach(customerRes => {\n            if (customerRes.reservationId === reservation.reservationId) {\n              reservation[\"cust\"] = \"customer\";\n            }\n\n            reservation[\"blue\"] = 2;\n          }));\n        });\n        return reservation;\n      });\n      this.setState({\n        reservations: res.data\n      });\n    });\n  } //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n\n\n  render() {\n    let reservations = this.state.reservations;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card m-5 p-3 bg-subtle shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \" text-center m-3 p-1\",\n          children: \"Flight Reservations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), this.state.reservations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating col-6 offset-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"fligthNum\",\n              placeholder: \"\",\n              name: \"flightNum\",\n              className: \"form-control form-control-sm\",\n              value: this.state.flightNum,\n              onChange: this.changeTextHandler,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstnameInput\",\n              className: \"form-label\",\n              children: \"Flight Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-personal btn-sm col-2\",\n            onClick: this.getReservations,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : null,\n        /** if reservations are present it displauys a table with customers reservations*/\n        reservations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Class\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: reservations.map(res => {\n                console.log(res.blue); //   if (res.cust) {\n                //     return (\n                //       <tr key={res.reservationId}>\n                //         <td>{res.reservationId}</td>\n                //         <td>{`${res.cust.firstName} ${\n                //           res.cust.lastName || null\n                //         }`}</td>\n                //         <td>\n                //           {res.flight.destinationAirport[0].airportCode}\n                //         </td>\n                //         <td>\n                //           {new Date(\n                //             res.flight.departureDate\n                //           ).toDateString()}\n                //         </td>\n                //         <td>\n                //           <button\n                //             onClick={this.cancelRes}\n                //             value={res.flight.id}\n                //           >\n                //             Cancel\n                //           </button>\n                //         </td>\n                //       </tr>\n                //     );\n                //   }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ReservationListComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ReservationListComponent.js"],"names":["React","Component","CustomerService","FlightService","ReservationService","ReservationListComponent","constructor","props","changeTextHandler","e","setState","target","name","value","state","flightNum","reservations","flight","customers","getReservations","bind","componentDidMount","getCustomers","then","res","data","console","log","getFlightById","fligth","getReservationForFlight","map","reservation","response","customer","forEach","customerRes","reservationId","render","length","blue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CustomerService from \"../../services/CustomerService\";\nimport FlightService from \"../../services/FlightService\";\nimport ReservationService from \"../../services/ReservationService\";\n\nclass ReservationListComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flightNum: \"\",\n      reservations: [],\n      flight: [],\n      customers: {},\n    };\n    this.getReservations = this.getReservations.bind(this);\n  }\n  componentDidMount() {\n    CustomerService.getCustomers().then((res) => {\n      this.setState({ customers: res.data });\n    });\n\n    if (this.state.flightNum !== \"\") {\n      this.getReservations();\n    }\n  }\n  getReservations() {\n    console.log(this.state);\n    FlightService.getFlightById(this.state.flightNum).then((res) =>\n      this.setState({ fligth: res.data })\n    );\n    let customers = this.state.customers;\n    ReservationService.getReservationForFlight(this.state.flightNum).then(\n      (res) => {\n        res.data.map((reservation) => {\n          customers.then((response) => {\n            response.data.map((customer) =>\n              customer.reservations.forEach((customerRes) => {\n                if (customerRes.reservationId === reservation.reservationId) {\n                  reservation[\"cust\"] = \"customer\";\n                }\n                reservation[\"blue\"] = 2;\n              })\n            );\n          });\n          return reservation;\n        });\n        this.setState({\n          reservations: res.data,\n        });\n      }\n    );\n  }\n  //univeral change text handler for changes in any of the inputs in the form. Used this to reate DRY code instead of repeetive change handlers\n  changeTextHandler = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    let reservations = this.state.reservations;\n    return (\n      <div className=\"container\">\n        <div className=\"card m-5 p-3 bg-subtle shadow-lg\">\n          <h3 className=\" text-center m-3 p-1\">Flight Reservations</h3>\n          {this.state.reservations.length === 0 ? (\n            <div className=\"row\">\n              <div className=\"form-floating col-6 offset-md-2\">\n                <input\n                  id=\"fligthNum\"\n                  placeholder=\"\"\n                  name=\"flightNum\"\n                  className=\"form-control form-control-sm\"\n                  value={this.state.flightNum}\n                  onChange={this.changeTextHandler}\n                  required\n                ></input>\n                <label htmlFor=\"firstnameInput\" className=\"form-label\">\n                  Flight Number\n                </label>{\" \"}\n              </div>\n              <button\n                className=\"btn btn-personal btn-sm col-2\"\n                onClick={this.getReservations}\n              >\n                Search\n              </button>\n            </div>\n          ) : null}\n\n          {\n            /** if reservations are present it displauys a table with customers reservations*/ reservations.length >\n            0 ? (\n              <div className=\"row\">\n                <table className=\"table table-striped mb-5\">\n                  <thead>\n                    <tr>\n                      <th>Id</th>\n                      <th>Name</th>\n                      <th>Class</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {reservations.map((res) => {\n                      console.log(res.blue);\n                      //   if (res.cust) {\n                      //     return (\n                      //       <tr key={res.reservationId}>\n                      //         <td>{res.reservationId}</td>\n                      //         <td>{`${res.cust.firstName} ${\n                      //           res.cust.lastName || null\n                      //         }`}</td>\n                      //         <td>\n                      //           {res.flight.destinationAirport[0].airportCode}\n                      //         </td>\n                      //         <td>\n                      //           {new Date(\n                      //             res.flight.departureDate\n                      //           ).toDateString()}\n                      //         </td>\n                      //         <td>\n                      //           <button\n                      //             onClick={this.cancelRes}\n                      //             value={res.flight.id}\n                      //           >\n                      //             Cancel\n                      //           </button>\n                      //         </td>\n                      //       </tr>\n                      //     );\n                      //   }\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            ) : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReservationListComponent;\n"]},"metadata":{},"sourceType":"module"}