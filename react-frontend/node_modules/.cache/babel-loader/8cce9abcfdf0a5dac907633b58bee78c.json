{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ListFlightComponent.js\";\nimport React, { Component } from \"react\";\nimport FlightService from \"../../services/FlightService\";\nimport { Link } from \"react-router-dom\";\nimport AirportService from \"../../services/AirportService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListFlightComponent extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      flights: [],\n      origin: \"\",\n      destination: \"\",\n      departureDate: \"\",\n      returnDate: \"\",\n      tripType: \"Roundtrip\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      tripType: localStorage.getItem(\"tripType\"),\n      departureDate: localStorage.getItem(\"departureDate\"),\n      returnDate: localStorage.getItem(\"returnDate\")\n    });\n    AirportService.getAirportsByCode(localStorage.getItem(\"origin\")).then(res => {\n      this.setState({\n        origin: res.data\n      });\n    });\n    AirportService.getAirportsByCode(localStorage.getItem(\"destination\")).then(res => {\n      this.setState({\n        destination: res.data\n      });\n    });\n    FlightService.getFlightsByAirportCode(localStorage.getItem(\"origin\")).then(res => {\n      let flights = res.data.filter(data => data.destinationAirport[0].airportCode === localStorage.getItem(\"destination\"));\n      let dDate = new Date(localStorage.getItem(\"departureDate\").slice(0, 28)).toISOString().slice(0, 9);\n      let flightsFiltered = flights.filter(flight => {\n        console.log(flight); // if (flight.includes(dDate)) {\n        //   return true;\n        // } else {\n        //   return false;\n        // }\n\n        return true;\n      });\n      this.setState({\n        flights: flights\n      });\n    });\n  }\n\n  deleteFlight(id) {\n    FlightService.deleteFlight(id).then(res => {\n      this.setState({\n        flights: this.state.flights.filter(flight => flight.id !== id)\n      });\n    });\n  }\n\n  render() {\n    let flights = this.state.flights;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mt-3\",\n        children: \"Flight List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flight-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [\"From \", this.state.origin.airportLocation, \" to\", \" \", this.state.destination.airportLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table  table-striped flight-list mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Airline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Departure Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Arrival Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"flight-list\",\n            children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: flight.airline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(flight.departureDate).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(flight.arrivalDate).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"btn btn-light \",\n                  to: `/view-flight/${flight.id}`,\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, flight.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ListFlightComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ListFlightComponent.js"],"names":["React","Component","FlightService","Link","AirportService","ListFlightComponent","constructor","props","console","log","state","flights","origin","destination","departureDate","returnDate","tripType","componentDidMount","setState","localStorage","getItem","getAirportsByCode","then","res","data","getFlightsByAirportCode","filter","destinationAirport","airportCode","dDate","Date","slice","toISOString","flightsFiltered","flight","deleteFlight","id","render","airportLocation","map","airline","toLocaleString","arrivalDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FlightService from \"../../services/FlightService\";\nimport { Link } from \"react-router-dom\";\nimport AirportService from \"../../services/AirportService\";\n\nclass ListFlightComponent extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      flights: [],\n      origin: \"\",\n      destination: \"\",\n      departureDate: \"\",\n      returnDate: \"\",\n      tripType: \"Roundtrip\",\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      tripType: localStorage.getItem(\"tripType\"),\n      departureDate: localStorage.getItem(\"departureDate\"),\n      returnDate: localStorage.getItem(\"returnDate\"),\n    });\n    AirportService.getAirportsByCode(localStorage.getItem(\"origin\")).then(\n      (res) => {\n        this.setState({\n          origin: res.data,\n        });\n      }\n    );\n    AirportService.getAirportsByCode(localStorage.getItem(\"destination\")).then(\n      (res) => {\n        this.setState({\n          destination: res.data,\n        });\n      }\n    );\n    FlightService.getFlightsByAirportCode(localStorage.getItem(\"origin\")).then(\n      (res) => {\n        let flights = res.data.filter(\n          (data) =>\n            data.destinationAirport[0].airportCode ===\n            localStorage.getItem(\"destination\")\n        );\n        let dDate = new Date(localStorage.getItem(\"departureDate\").slice(0, 28))\n          .toISOString()\n          .slice(0, 9);\n        let flightsFiltered = flights.filter((flight) => {\n          console.log(flight);\n          // if (flight.includes(dDate)) {\n          //   return true;\n          // } else {\n          //   return false;\n          // }\n          return true;\n        });\n        this.setState({\n          flights: flights,\n        });\n      }\n    );\n  }\n  deleteFlight(id) {\n    FlightService.deleteFlight(id).then((res) => {\n      this.setState({\n        flights: this.state.flights.filter((flight) => flight.id !== id),\n      });\n    });\n  }\n\n  render() {\n    let flights = this.state.flights;\n\n    return (\n      <div className=\"container\">\n        <h2 className=\"text-center mt-3\">Flight List</h2>\n        <div className=\"row flight-list\">\n          <div className=\"text-center\">\n            From {this.state.origin.airportLocation} to{\" \"}\n            {this.state.destination.airportLocation}\n          </div>\n          <table className=\"table  table-striped flight-list mb-5\">\n            <thead>\n              <tr>\n                <th>Airline</th>\n                <th>Departure Time</th>\n                <th>Arrival Time</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody className=\"flight-list\">\n              {flights.map((flight) => (\n                <tr key={flight.id}>\n                  <td>{flight.airline}</td>\n                  <td>\n                    <small>\n                      {new Date(flight.departureDate).toLocaleString()}\n                    </small>\n                  </td>\n                  <td>\n                    <small>\n                      {new Date(flight.arrivalDate).toLocaleString()}\n                    </small>\n                  </td>\n                  <td>\n                    <Link\n                      className=\"btn btn-light \"\n                      to={`/view-flight/${flight.id}`}\n                    >\n                      View\n                    </Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListFlightComponent;\n"]},"metadata":{},"sourceType":"module"}