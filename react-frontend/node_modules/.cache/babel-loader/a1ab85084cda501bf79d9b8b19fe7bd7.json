{"ast":null,"code":"import _slicedToArray from\"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useHistory}from\"react-router-dom\";import{useState}from\"react\";import ReservationService from\"../../services/ReservationService\";import SelectorComponent from\"../helpers/SelectorComponent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ItineraryComponent(props){var _useState=useState(props.itinerary),_useState2=_slicedToArray(_useState,1),flights=_useState2[0];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),prices=_useState4[0],setPrices=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),seats=_useState6[0],setSeats=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),booked=_useState8[0],setBooked=_useState8[1];var seatClass=[\"First\",\"Business\",\"Economy\"];var history=useHistory();//function to book flights on the click of the submit button. it gathers all info, cutomer, flights and seat class and creates reservation. then clears local storage and sends user to their profile\nfunction flightBooker(){var user=JSON.parse(sessionStorage.getItem(\"user\"));flights.forEach(function(flight){ReservationService.createReservations(flight.id,user.id,localStorage.getItem(flight.id)).then(function(){});});localStorage.clear();history.push(\"/view-customer/\".concat(JSON.parse(sessionStorage.getItem(\"user\")).id));}//handles changes to the seat slection. need to fix how it updaters state. price div wont update\nfunction handleSelectChange(selectedValue,e){// setPrices({})\nvar temp={};var tempSeats={};for(var _flight in prices){temp[_flight]=prices[_flight];}for(var _flight2 in seats){tempSeats[_flight2]=seats[_flight2];}var flight=flights.filter(function(flight){return flight.id===e;})[0];if(selectedValue===\"Business\"){temp[e]=flight.aircraft.businessPrice;tempSeats[e]=flight.aircraft.businessClass-flight.businessTickets;}else if(selectedValue===\"First\"){temp[e]=flight.aircraft.firstPrice;tempSeats[e]=flight.aircraft.firstClass-flight.firstTickets;}else if(selectedValue===\"Economy\"){temp[e]=flight.aircraft.economyPrice;tempSeats[e]=flight.aircraft.economyClass-flight.economyTickets;}setPrices(temp);setSeats(tempSeats);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-center mt-3 \",children:\"Confirm Itinerary\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row flight-list\",children:\" \"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped flight-list mb-5\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Airline\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Departure Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Arrival Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Details\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Ticket Price:\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Seats Available:\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"flight-list\",children:/** working on filtering the seats so that when flights/reservations/class > flight/aircraft/class you cannot book that class anymore*/flights.map(function(flight){var seatClassFlight=seatClass.filter(function(seatClass){// console.log(seatClass);\n// console.log(flight);\nif(seatClass===\"First\"){// console.log\n// console.log(flight.tickets <= flight.aircraft.firstClass);\nreturn true;}else{return true;}});//creates a table displaying chosen flights infor mation and lets you choose your class/displays price\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:flight.airline}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"small\",{children:new Date(flight.departureDate).toLocaleString()})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"small\",{children:new Date(flight.arrivalDate).toLocaleString()})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(SelectorComponent,{className:\"\",id:flight.id,arrayOfData:seatClassFlight,location:flight.id,onSelectChange:handleSelectChange})})}),prices[flight.id]?/*#__PURE__*/_jsx(\"td\",{className:\"col\",children:prices[flight.id]}):/*#__PURE__*/_jsx(\"td\",{className:\"col\"}),seats[flight.id]?/*#__PURE__*/_jsx(\"td\",{className:\"col\",children:seats[flight.id]}):/*#__PURE__*/_jsx(\"td\",{className:\"col\"})]},flight.id);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark col-2 offset-md-9 mb-2\",onClick:flightBooker,children:\"Book\"})})]});}export default ItineraryComponent;","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ItineraryComponent.js"],"names":["React","useHistory","useState","ReservationService","SelectorComponent","ItineraryComponent","props","itinerary","flights","prices","setPrices","seats","setSeats","booked","setBooked","seatClass","history","flightBooker","user","JSON","parse","sessionStorage","getItem","forEach","flight","createReservations","id","localStorage","then","clear","push","handleSelectChange","selectedValue","e","temp","tempSeats","filter","aircraft","businessPrice","businessClass","businessTickets","firstPrice","firstClass","firstTickets","economyPrice","economyClass","economyTickets","map","seatClassFlight","airline","Date","departureDate","toLocaleString","arrivalDate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport ReservationService from \"../../services/ReservationService\";\n\nimport SelectorComponent from \"../helpers/SelectorComponent\";\n\nfunction ItineraryComponent(props) {\n  const [flights] = useState(props.itinerary);\n  const [prices, setPrices] = useState({});\n  const [seats, setSeats] = useState({});\n  const [booked, setBooked] = useState({});\n  let seatClass = [\"First\", \"Business\", \"Economy\"];\n  let history = useHistory();\n  //function to book flights on the click of the submit button. it gathers all info, cutomer, flights and seat class and creates reservation. then clears local storage and sends user to their profile\n  function flightBooker() {\n    let user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    flights.forEach((flight) => {\n      ReservationService.createReservations(\n        flight.id,\n        user.id,\n        localStorage.getItem(flight.id)\n      ).then(() => {});\n    });\n    localStorage.clear();\n\n    history.push(\n      `/view-customer/${JSON.parse(sessionStorage.getItem(\"user\")).id}`\n    );\n  }\n\n  //handles changes to the seat slection. need to fix how it updaters state. price div wont update\n  function handleSelectChange(selectedValue, e) {\n    // setPrices({})\n    let temp = {};\n    let tempSeats = {};\n    for (const flight in prices) {\n      temp[flight] = prices[flight];\n    }\n    for (const flight in seats) {\n      tempSeats[flight] = seats[flight];\n    }\n    let flight = flights.filter((flight) => {\n      return flight.id === e;\n    })[0];\n    if (selectedValue === \"Business\") {\n      temp[e] = flight.aircraft.businessPrice;\n      tempSeats[e] = flight.aircraft.businessClass - flight.businessTickets;\n    } else if (selectedValue === \"First\") {\n      temp[e] = flight.aircraft.firstPrice;\n      tempSeats[e] = flight.aircraft.firstClass - flight.firstTickets;\n    } else if (selectedValue === \"Economy\") {\n      temp[e] = flight.aircraft.economyPrice;\n      tempSeats[e] = flight.aircraft.economyClass - flight.economyTickets;\n    }\n    setPrices(temp);\n    setSeats(tempSeats);\n  }\n\n  return (\n    <div>\n      <h5 className=\"text-center mt-3 \">Confirm Itinerary</h5>\n      <div className=\"row flight-list\"> </div>\n      <table className=\"table table-striped flight-list mb-5\">\n        <thead>\n          <tr>\n            <th>Airline</th>\n            <th>Departure Time</th>\n            <th>Arrival Time</th>\n            <th>Details</th>\n            <th>Ticket Price:</th>\n            <th>Seats Available:</th>\n          </tr>\n        </thead>\n        <tbody className=\"flight-list\">\n          {\n            /** working on filtering the seats so that when flights/reservations/class > flight/aircraft/class you cannot book that class anymore*/\n            flights.map((flight) => {\n              let seatClassFlight = seatClass.filter((seatClass) => {\n                // console.log(seatClass);\n                // console.log(flight);\n                if (seatClass === \"First\") {\n                  // console.log\n                  // console.log(flight.tickets <= flight.aircraft.firstClass);\n                  return true;\n                } else {\n                  return true;\n                }\n              });\n              //creates a table displaying chosen flights infor mation and lets you choose your class/displays price\n              return (\n                <tr key={flight.id}>\n                  <td>{flight.airline}</td>\n                  <td>\n                    <small>\n                      {new Date(flight.departureDate).toLocaleString()}\n                    </small>\n                  </td>\n                  <td>\n                    <small>\n                      {new Date(flight.arrivalDate).toLocaleString()}\n                    </small>\n                  </td>\n                  <td>\n                    <div className=\"row\">\n                      <SelectorComponent\n                        className=\"\"\n                        id={flight.id}\n                        arrayOfData={seatClassFlight}\n                        location={flight.id}\n                        onSelectChange={handleSelectChange}\n                      />\n                    </div>\n                  </td>\n\n                  {prices[flight.id] ? (\n                    <td className=\"col\">{prices[flight.id]}</td>\n                  ) : (\n                    <td className=\"col\"></td>\n                  )}\n                  {seats[flight.id] ? (\n                    <td className=\"col\">{seats[flight.id]}</td>\n                  ) : (\n                    <td className=\"col\"></td>\n                  )}\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n\n      <div className=\"row\">\n        {/** wnat to add pop up confirmation before allowing booking */}\n        <button\n          className=\"btn btn-dark col-2 offset-md-9 mb-2\"\n          onClick={flightBooker}\n        >\n          Book\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ItineraryComponent;\n"]},"metadata":{},"sourceType":"module"}