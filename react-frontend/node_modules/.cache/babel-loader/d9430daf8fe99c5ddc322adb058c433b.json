{"ast":null,"code":"var _jsxFileName = \"/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ItineraryComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport ReservationService from \"../../services/ReservationService\";\nimport SelectorComponent from \"../helpers/SelectorComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItineraryComponent(props) {\n  _s();\n\n  const [flights] = useState(props.itinerary);\n  const [prices, setPrices] = useState({});\n  const [seats, setSeats] = useState({});\n  const [booked, setBooked] = useState({});\n  let seatClass = [\"First\", \"Business\", \"Economy\"];\n  let history = useHistory(); //function to book flights on the click of the submit button. it gathers all info, cutomer, flights and seat class and creates reservation. then clears local storage and sends user to their profile\n\n  function flightBooker() {\n    let user = JSON.parse(sessionStorage.getItem(\"user\"));\n    flights.forEach(flight => {\n      ReservationService.createReservations(flight.id, user.id, localStorage.getItem(flight.id)).then(() => {});\n    });\n    localStorage.clear();\n    history.push(`/view-customer/${JSON.parse(sessionStorage.getItem(\"user\")).id}`);\n  }\n\n  function getReservations(flight) {\n    ReservationService.getReservationForFlight(flight).then(res => {\n      res.data.map(reservation => {\n        if (reservation.seatClass === \"First\") {\n          let temp = booked[\"firstBooked\"];\n          temp++;\n          this.setState({\n            firstBooked: temp\n          });\n        } else if (reservation.seatClass === \"Business\") {\n          let temp = booked[\"businessBooked\"];\n          temp++;\n          setBooked({\n            businessBooked: temp\n          });\n        } else if (reservation.seatClass === \"Economy\") {\n          let temp = booked[\"economyBooked\"];\n          temp++;\n          setBooked({\n            economyBooked: temp\n          });\n        }\n      });\n    });\n  } //handles changes to the seat slection. need to fix how it updaters state. price div wont update\n\n\n  function handleSelectChange(selectedValue, e) {\n    // setPrices({})\n    let temp = {};\n    let tempSeats = {};\n\n    for (const flight in prices) {\n      temp[flight] = prices[flight];\n    }\n\n    for (const flight in seats) {\n      tempSeats[flight] = seats[flight];\n    }\n\n    console.log(selectedValue, e);\n\n    if (selectedValue === \"Business\") {\n      temp[e] = flights.filter(flight => {\n        return flight.id === e;\n      })[0].aircraft.businessPrice;\n      tempSeats[e] = flights.filter(flight => {\n        return flight.id === e;\n      })[0].aircraft.businessClass;\n    } else if (selectedValue === \"First\") {\n      temp[e] = flights.filter(flight => {\n        return flight.id === e;\n      })[0].aircraft.firstPrice;\n    } else if (selectedValue === \"Economy\") {\n      temp[e] = flights.filter(flight => {\n        return flight.id === e;\n      })[0].aircraft.economyPrice;\n    }\n\n    setPrices(temp);\n    setSeats(tempSeats);\n    console.log(\"inside\", prices);\n  }\n\n  console.log(prices);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mt-3 \",\n      children: \"Selected Itinerary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row flight-list\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped flight-list mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Airline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arrival Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ticket Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Seats Available:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"flight-list\",\n        children:\n        /** working on filtering the seats so that when flights/reservations/class > flight/aircraft/class you cannot book that class anymore*/\n        flights.map(flight => {\n          getReservations(flight);\n          let seatClassFlight = seatClass.filter(seatClass => {\n            // console.log(seatClass);\n            // console.log(flight);\n            if (seatClass === \"First\") {\n              // console.log\n              // console.log(flight.tickets <= flight.aircraft.firstClass);\n              return true;\n            } else {\n              return true;\n            }\n          }); //creates a table displaying chosen flights infor mation and lets you choose your class/displays price\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.airline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(flight.departureDate).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(flight.arrivalDate).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(SelectorComponent, {\n                  className: \"\",\n                  id: flight.id,\n                  arrayOfData: seatClassFlight,\n                  location: flight.id,\n                  onSelectChange: handleSelectChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), prices[flight.id] ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col\",\n              children: prices[flight.id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), seats[flight.id] ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col\",\n              children: seats[flight.id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this)]\n          }, flight.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark col-2 offset-md-9 mb-2\",\n        onClick: flightBooker,\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItineraryComponent, \"MQc9dRv88YYzjHOpctMU/1CLCj0=\", false, function () {\n  return [useHistory];\n});\n\n_c = ItineraryComponent;\nexport default ItineraryComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItineraryComponent\");","map":{"version":3,"sources":["/Users/lmalloy329/Desktop/Flight Management Project/react-frontend/src/components/flight/ItineraryComponent.js"],"names":["React","useHistory","useState","ReservationService","SelectorComponent","ItineraryComponent","props","flights","itinerary","prices","setPrices","seats","setSeats","booked","setBooked","seatClass","history","flightBooker","user","JSON","parse","sessionStorage","getItem","forEach","flight","createReservations","id","localStorage","then","clear","push","getReservations","getReservationForFlight","res","data","map","reservation","temp","setState","firstBooked","businessBooked","economyBooked","handleSelectChange","selectedValue","e","tempSeats","console","log","filter","aircraft","businessPrice","businessClass","firstPrice","economyPrice","seatClassFlight","airline","Date","departureDate","toLocaleString","arrivalDate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport ReservationService from \"../../services/ReservationService\";\n\nimport SelectorComponent from \"../helpers/SelectorComponent\";\n\nfunction ItineraryComponent(props) {\n  const [flights] = useState(props.itinerary);\n  const [prices, setPrices] = useState({});\n  const [seats, setSeats] = useState({});\n  const [booked, setBooked] = useState({});\n  let seatClass = [\"First\", \"Business\", \"Economy\"];\n  let history = useHistory();\n  //function to book flights on the click of the submit button. it gathers all info, cutomer, flights and seat class and creates reservation. then clears local storage and sends user to their profile\n  function flightBooker() {\n    let user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    flights.forEach((flight) => {\n      ReservationService.createReservations(\n        flight.id,\n        user.id,\n        localStorage.getItem(flight.id)\n      ).then(() => {});\n    });\n    localStorage.clear();\n\n    history.push(\n      `/view-customer/${JSON.parse(sessionStorage.getItem(\"user\")).id}`\n    );\n  }\n  function getReservations(flight) {\n    ReservationService.getReservationForFlight(flight).then((res) => {\n      res.data.map((reservation) => {\n        if (reservation.seatClass === \"First\") {\n          let temp = booked[\"firstBooked\"];\n          temp++;\n          this.setState({\n            firstBooked: temp,\n          });\n        } else if (reservation.seatClass === \"Business\") {\n          let temp = booked[\"businessBooked\"];\n          temp++;\n\n          setBooked({\n            businessBooked: temp,\n          });\n        } else if (reservation.seatClass === \"Economy\") {\n          let temp = booked[\"economyBooked\"];\n          temp++;\n\n          setBooked({\n            economyBooked: temp,\n          });\n        }\n      });\n    });\n  }\n\n  //handles changes to the seat slection. need to fix how it updaters state. price div wont update\n  function handleSelectChange(selectedValue, e) {\n    // setPrices({})\n    let temp = {};\n    let tempSeats = {};\n    for (const flight in prices) {\n      temp[flight] = prices[flight];\n    }\n    for (const flight in seats) {\n      tempSeats[flight] = seats[flight];\n    }\n    console.log(selectedValue, e);\n    if (selectedValue === \"Business\") {\n      temp[e] = flights.filter((flight) => {\n        return flight.id === e;\n      })[0].aircraft.businessPrice;\n      tempSeats[e] = flights.filter((flight) => {\n        return flight.id === e;\n      })[0].aircraft.businessClass;\n    } else if (selectedValue === \"First\") {\n      temp[e] = flights.filter((flight) => {\n        return flight.id === e;\n      })[0].aircraft.firstPrice;\n    } else if (selectedValue === \"Economy\") {\n      temp[e] = flights.filter((flight) => {\n        return flight.id === e;\n      })[0].aircraft.economyPrice;\n    }\n    setPrices(temp);\n    setSeats(tempSeats);\n    console.log(\"inside\", prices);\n  }\n  console.log(prices);\n  return (\n    <div>\n      <h2 className=\"text-center mt-3 \">Selected Itinerary</h2>\n      <div className=\"row flight-list\"> </div>\n      <table className=\"table table-striped flight-list mb-5\">\n        <thead>\n          <tr>\n            <th>Airline</th>\n            <th>Departure Time</th>\n            <th>Arrival Time</th>\n            <th>Details</th>\n            <th>Ticket Price:</th>\n            <th>Seats Available:</th>\n          </tr>\n        </thead>\n        <tbody className=\"flight-list\">\n          {\n            /** working on filtering the seats so that when flights/reservations/class > flight/aircraft/class you cannot book that class anymore*/\n            flights.map((flight) => {\n              getReservations(flight);\n              let seatClassFlight = seatClass.filter((seatClass) => {\n                // console.log(seatClass);\n                // console.log(flight);\n                if (seatClass === \"First\") {\n                  // console.log\n                  // console.log(flight.tickets <= flight.aircraft.firstClass);\n                  return true;\n                } else {\n                  return true;\n                }\n              });\n              //creates a table displaying chosen flights infor mation and lets you choose your class/displays price\n              return (\n                <tr key={flight.id}>\n                  <td>{flight.airline}</td>\n                  <td>\n                    <small>\n                      {new Date(flight.departureDate).toLocaleString()}\n                    </small>\n                  </td>\n                  <td>\n                    <small>\n                      {new Date(flight.arrivalDate).toLocaleString()}\n                    </small>\n                  </td>\n                  <td>\n                    <div className=\"row\">\n                      <SelectorComponent\n                        className=\"\"\n                        id={flight.id}\n                        arrayOfData={seatClassFlight}\n                        location={flight.id}\n                        onSelectChange={handleSelectChange}\n                      />\n                    </div>\n                  </td>\n\n                  {prices[flight.id] ? (\n                    <td className=\"col\">{prices[flight.id]}</td>\n                  ) : (\n                    <td className=\"col\"></td>\n                  )}\n                  {seats[flight.id] ? (\n                    <td className=\"col\">{seats[flight.id]}</td>\n                  ) : (\n                    <td className=\"col\"></td>\n                  )}\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n\n      <div className=\"row\">\n        {/** wnat to add pop up confirmation before allowing booking */}\n        <button\n          className=\"btn btn-dark col-2 offset-md-9 mb-2\"\n          onClick={flightBooker}\n        >\n          Book\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ItineraryComponent;\n"]},"metadata":{},"sourceType":"module"}